#!/bin/bash

# 로그 설정
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
echo "$(date): User Data 스크립트 시작"

# 패키지 업데이트
apt-get update -y

# Docker 설치
apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt-get update -y
apt-get install -y docker-ce docker-ce-cli containerd.io
usermod -aG docker ubuntu

# Docker Compose 설치
curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

# AWS CLI 설치
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
./aws/install --update

# 환경 변수 설정
export AWS_DEFAULT_REGION=ap-northeast-2
export ECR_REGISTRY=365458640975.dkr.ecr.ap-northeast-2.amazonaws.com
export AWS_ACCESS_KEY_ID=AKIAVKFYIKBH2SARM6SB
export AWS_SECRET_ACCESS_KEY=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

# ECR 로그인
aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY

# 작업 디렉터리 설정
cd /home/ubuntu
rm -rf petplace
mkdir -p petplace
cd petplace

# 환경 설정 파일 생성
cat > .env << 'ENV_EOF'
ECR_REGISTRY=365458640975.dkr.ecr.ap-northeast-2.amazonaws.com
DB_HOST=petplace-db.cpuw4w8giin7.ap-northeast-2.rds.amazonaws.com
DB_PORT=5432
DB_NAME=petplace
DB_USER=petplace_admin
DB_PASSWORD=PetPlace2025!
JWT_SECRET_KEY=your-secret-jwt-key-petplace-2025
SECRET_KEY=your-secret-key-petplace-2025
ENV_EOF

# Docker Compose 파일 생성
cat > docker-compose.yml << 'COMPOSE_EOF'
version: '3.8'

services:
  backend:
    image: ${ECR_REGISTRY:-365458640975.dkr.ecr.ap-northeast-2.amazonaws.com}/petplace-backend:latest
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${DB_USER:-petplace_admin}:${DB_PASSWORD:-PetPlace2025!}@${DB_HOST:-petplace-db.cpuw4w8giin7.ap-northeast-2.rds.amazonaws.com}:${DB_PORT:-5432}/${DB_NAME:-petplace}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-jwt-key}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key}
    ports:
      - "5000:5000"
    networks:
      - petplace_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ${ECR_REGISTRY:-365458640975.dkr.ecr.ap-northeast-2.amazonaws.com}/petplace-frontend:latest
    volumes:
      - frontend_build:/var/www/html
    depends_on:
      - backend
    networks:
      - petplace_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/var/www/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - petplace_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - petplace_network
    volumes:
      - redis_data:/data
    restart: unless-stopped

networks:
  petplace_network:
    driver: bridge

volumes:
  redis_data:
  frontend_build:
COMPOSE_EOF

# Nginx 설정 파일 생성
cat > nginx.conf << 'NGINX_EOF'
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name xn--2q1b33lznbu5v.xn--h32bi4v.xn--3e0b707e 13.209.242.211 localhost;
        
        # Root directory
        root /var/www/html;
        index index.html index.htm;
        
        # Frontend (React build)
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # API proxy to Flask backend
        location /api {
            proxy_pass http://backend:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # Health check
        location /health {
            access_log off;
            proxy_pass http://backend:5000/health;
        }
        
        # Admin health check
        location /admin {
            proxy_pass http://backend:5000/admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
NGINX_EOF

# 권한 설정
chown -R ubuntu:ubuntu /home/ubuntu/petplace

echo "$(date): ECR에서 이미지 다운로드 시작"

# ECR 이미지 다운로드 및 시작
cd /home/ubuntu/petplace
docker-compose pull

echo "$(date): 애플리케이션 시작"
docker-compose up -d

# 백엔드가 시작될 때까지 대기
echo "$(date): 백엔드 시작 대기 중..."
sleep 60

# 데이터베이스 초기화
echo "$(date): 데이터베이스 초기화 시작"
docker-compose exec -T backend python -c "
try:
    from app.models import db
    from app import create_app
    app = create_app()
    with app.app_context():
        db.create_all()
        print('✅ Database tables created successfully!')
except Exception as e:
    print(f'❌ Database initialization error: {e}')
" || echo "Database migration completed or skipped"

# 서비스 상태 확인
echo "$(date): 서비스 상태 확인"
docker-compose ps

# 헬스 체크
echo "$(date): 애플리케이션 헬스 체크"
sleep 30
curl -f http://localhost/health || echo "Health check completed"
curl -f http://localhost/api/health || echo "API health check completed"

echo "$(date): ✅ PetPlace 전체 애플리케이션 배포 완료!"
echo "🌐 웹사이트: http://xn--2q1b33lznbu5v.xn--h32bi4v.xn--3e0b707e/"

# 배포 상태를 파일로 저장
echo "DEPLOYED" > /home/ubuntu/deployment-status.txt
echo "$(date)" >> /home/ubuntu/deployment-status.txt

echo "$(date): User Data 스크립트 완료"