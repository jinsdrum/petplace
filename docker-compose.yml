version: '3.8'

services:
  # PostgreSQL 데이터베이스 (RDS 사용으로 비활성화)
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: petplace_db
  #     POSTGRES_USER: petplace_user
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-your_secure_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - petplace_network
  #   restart: unless-stopped

  # Flask 백엔드
  backend:
    image: ${ECR_REGISTRY:-365458640975.dkr.ecr.ap-northeast-2.amazonaws.com}/petplace-backend:latest
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${DB_USER:-petplace_admin}:${DB_PASSWORD:-PetPlace2025!}@${DB_HOST:-petplace-db.cpuw4w8giin7.ap-northeast-2.rds.amazonaws.com}:${DB_PORT:-5432}/${DB_NAME:-petplace}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-jwt-key}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key}
    ports:
      - "5000:5000"
    networks:
      - petplace_network
    restart: unless-stopped

  # React 프론트엔드
  frontend:
    image: ${ECR_REGISTRY:-365458640975.dkr.ecr.ap-northeast-2.amazonaws.com}/petplace-frontend:latest
    volumes:
      - frontend_build:/var/www/html
    depends_on:
      - backend
    networks:
      - petplace_network
    restart: unless-stopped

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl.conf:/etc/nginx/conf.d/ssl.conf:ro
      - /etc/letsencrypt/live/xn--2q1b33lznbu5v.xn--h32bi4v.xn--3e0b707e:/etc/letsencrypt/live/xn--2q1b33lznbu5v.xn--h32bi4v.xn--3e0b707e:ro
      - /etc/letsencrypt/archive/xn--2q1b33lznbu5v.xn--h32bi4v.xn--3e0b707e:/etc/letsencrypt/archive/xn--2q1b33lznbu5v.xn--h32bi4v.xn--3e0b707e:ro
      - /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro
      - frontend_build:/var/www/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - petplace_network
    restart: unless-stopped

  # Redis (캐시 및 세션)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - petplace_network
    volumes:
      - redis_data:/data
    restart: unless-stopped

networks:
  petplace_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  frontend_build: