version: '3.8'

services:
  # PostgreSQL 데이터베이스 (RDS 사용으로 비활성화)
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: petplace_db
  #     POSTGRES_USER: petplace_user
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-your_secure_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - petplace_network
  #   restart: unless-stopped

  # Flask 백엔드
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${DB_USER:-petplace_admin}:${DB_PASSWORD:-PetPlace2025!}@${DB_HOST:-petplace-db.cpuw4w8giin7.ap-northeast-2.rds.amazonaws.com}:${DB_PORT:-5432}/${DB_NAME:-petplace}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-jwt-key}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key}
    ports:
      - "5000:5000"
    networks:
      - petplace_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # React 프론트엔드
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://backend:5000
      - REACT_APP_ADSENSE_CLIENT_ID=${ADSENSE_CLIENT_ID:-ca-pub-xxxxxxxxxxxxxxxxx}
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - petplace_network
    restart: unless-stopped

  # Redis (캐시 및 세션)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - petplace_network
    volumes:
      - redis_data:/data
    restart: unless-stopped

networks:
  petplace_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: